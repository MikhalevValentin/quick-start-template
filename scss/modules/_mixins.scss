@import './modules/_colors.scss';
@import './modules/_variables.scss';
//link
@mixin link() {
	text-decoration: none;
    cursor: pointer;
	&:hover,
	&:focus {
		text-decoration: none;
	}
}
//linkDefault
@mixin linkDefault() {
	@include link();
	color: $linkFontColor;
	&:hover,
	&:focus {
		color: $linkFontColorHover;
	}
}
//linkCustomColor
@mixin linkCustomColor($linkClr, $linkClrHover) {
    @include link();
    color: $linkClr;
    &:hover,
    &:focus {
        color: $linkClrHover;
    }
}
//inlineMixin
@mixin inlineMixin($align) {
    display: inline-block;
    vertical-align: $align;
}
//sizeMixin
@mixin sizeMixin($width, $height) {
    width: $width;
    height: $height;
}
//background
$imagedir:'../img/';

@mixin backgroundMixin($imgpath,$repeat: no-repeat,$position: 0 0) {
    background: {
        color: transparent;
        image: url(#{$imagedir}#{$imgpath});
        position: $position;
        repeat: $repeat;
    }
}
//v-center
@mixin v-center {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}
//border-radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
//border
@mixin borderSolidMixin($size, $clr, $radius) {
    border: $size solid $clr;
    @include border-radius($radius);
}
//box_shadow
@mixin box_shadow ($level) {

    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    } @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    } @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    } @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    } @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }

}
//transform
@mixin transformTranslateY($values) {
    -ms-transform: translateY($values);
    transform: translateY($values);
}
//transition
@mixin transition($prop, $values...) {
  -moz-#{$prop}: $values;
  -ms-#{$prop}: $values;
  -o-#{$prop}: $values;
  -webkit-#{$prop}: $values;
  $prop: $values;
}
// button mixin
@mixin button() {
    padding: 8px 24px;
    outline: none;
    cursor: pointer;
    line-height: 1;
    text-transform: uppercase;
    @include border-radius(2px);
    @include box_shadow(1);
    &:hover, &:focus {
        @include box_shadow(2);
        @include transition(all, 250ms);
        @include transformTranslateY(-1px);
    }
}
// buttonDefault mixin
@mixin buttonDefault() {
    @include button;
    background-color: $buttonDefaultBgColor;
    border: $buttonDefaultBorder;
    color: $buttonDefaultTextColor;
    &:hover, &:focus {
        background-color: $buttonDefaultBgColorHover;
        border: $buttonDefaultBorderHover;
    }
}
// buttonPrimary mixin
@mixin buttonPrimary() {
    @include button;
    background-color: $buttonPrimaryBgColor;
    border: $buttonPrimaryBorder;
    color: $buttonPrimaryTextColor;
    &:hover, &:focus {
        background-color: $buttonPrimaryBgColorHover;
        border: $buttonPrimaryBorderHover;
    }
}
// buttonSecondary mixin
@mixin buttonSecondary() {
    @include button;
    background-color: $buttonSecondaryBgColor;
    border: $buttonSecondaryBorder;
    color: $buttonSecondaryTextColor;
    &:hover, &:focus {
        background-color: $buttonSecondaryBgColorHover;
        border: $buttonSecondaryBorderHover;
    }
}
// buttonAttention mixin
@mixin buttonAttention() {
    @include button;
    background-color: $buttonAttentionBgColor;
    border: $buttonAttentionBorder;
    color: $buttonAttentionTextColor;
    &:hover, &:focus {
        background-color: $buttonAttentionBgColorHover;
        border: $buttonAttentionBorderHover;
    }
}
// buttonWarning mixin
@mixin buttonWarning() {
    @include button;
    background-color: $buttonWarningBgColor;
    border: $buttonWarningBorder;
    color: $buttonWarningTextColor;
    &:hover, &:focus {
        background-color: $buttonWarningBgColorHover;
        border: $buttonWarningBorderHover;
    }
}
//buttonLarge
@mixin buttonLarge($pt, $fz) {
	@include button;
	width: 100%;
	font-size: $fz;
	padding-top: $pt;
	padding-bottom: $pt;
}

//checkbox
@mixin checkbox() {
    @include sizeMixin(24px, 24px);
}
//ckeckboxCustomBgColor
@mixin ckeckboxCustomBgColor($color) {
    .fill-color {
        fill: $color;
    }
}
//mixinPrimaryColor
@mixin mixinPrimaryColor {
    .fill-color {
        fill: $colorGreen;
    }
}
//mixinSecondaryColor
@mixin mixinSecondaryColor {
    .fill-color {
        fill: $colorBlue;
    }
}
//mixinAttentionColor
@mixin mixinAttentionColor {
    .fill-color {
        fill: $colorYellow;
    }
}
//mixinWarningColor
@mixin mixinWarningColor {
    .fill-color {
        fill: $colorRed;
    }
}

/////////////////
///grid mixins///
/////////////////

//Grid Container
@mixin gridContainer($prop) {
    display: $prop;             //grid or inline-grid
}

//Explicit Grid
//repeat-rows
@mixin repeat-rows($count, $size) {
    grid-template-rows: repeat($count, $size);
}
//repeat-columns
@mixin repeat-columns($count, $size) {
    grid-template-columns: repeat($count, $size);
}

//mixin grid-two-sidebar
@mixin grid-header {
    grid-area: header;
}
@mixin grid-main {
    grid-area: main;
}
@mixin grid-sidebar {
    grid-area: sidebar;
}
@mixin grid-sidebar-left {
    grid-area: left;
}
@mixin grid-sidebar-right {
    grid-area: right;
}
@mixin grid-footer {
    grid-area: footer;
}
@mixin grid-two-sidebar($min-width-SidebarLeft, $min-width-SidebarRight, $min-height-header, $min-height-footer) {

    .page__header { @include grid-header }
    .page__footer { @include grid-footer }
    .page__main { @include grid-main }
    .page__aside--left { @include grid-sidebar-left }
    .page__aside--right { @include grid-sidebar-right }

    @include gridContainer(grid);
    grid-template-areas: "header header header"
                         "left main right"
                         "footer footer footer";
    grid-template-columns: minmax($min-width-SidebarLeft, auto) 1fr minmax($min-width-SidebarRight, auto);
    grid-template-rows: minmax($min-height-header, auto)
                        1fr
                        minmax($min-height-footer, auto);
    min-height: 100vh;

    @media screen and (max-width: 768px) {
        grid-template-areas: "header"
                            "left"
                            "main"
                            "right"
                            "footer";
        grid-template-columns: 100%;
        grid-template-rows: minmax(auto, auto)
                            minmax(auto, auto)
                            1fr
                            minmax(auto, auto)
                            minmax(auto, auto);
    }
}

//mixin grid-one-sidebar
@mixin grid-one-sidebar($min-width-Sidebar, $min-height-header, $min-height-footer) {
    .page__header { @include grid-header }
    .page__footer { @include grid-footer }
    .page__main { @include grid-main }
    .page__aside { @include grid-sidebar }

    @include gridContainer(grid);
    grid-template-areas: "header header"
                         "main sidebar"
                         "footer footer";
    grid-template-columns: 1fr minmax($min-width-Sidebar, auto);
    grid-template-rows: minmax($min-height-header, auto)
                        1fr
                        minmax($min-height-footer, auto);
    min-height: 100vh;

    @media screen and (max-width: 768px) {
        grid-template-areas: "header"
                            "sidebar"
                            "main"
                            "footer";
        grid-template-columns: 100%;
        grid-template-rows: minmax(auto, auto)
                            minmax(auto, auto)
                            1fr
                            minmax(auto, auto);
    }
}
